include("graph.jl")
include("core.jl")
include("meth.jl")


using LinearAlgebra
using Laplacians
using SparseArrays


fname = open("filename.txt", "r")
str   = readline(fname);
nn     = parse(Int, str);


for nnnn=1:nn  
    str = readline(fname);
    str = split(str);
    G   = get_graph(str[1]);
    on=G.n;om=G.m;
    Gc=findconnect(G)
    G=Gc;
    n=G.n;m=G.m;
    L=lapsp(G);
    A=adjsp(G);
    t1=time();
    J=ones(n,n)/n;
    invL=inv(L+J)-J;
    dis1=0;
    for i=1:n
        for j=1:n
            tmp_dis=invL[i,i]+invL[j,j]-2*invL[j,i];
            if dis1 < tmp_dis
                dis1=tmp_dis;
            end
        end   
    end
    t2=time();
    println(str[1],' ',dis1,' ',t2-t1)

end
close(fname)
